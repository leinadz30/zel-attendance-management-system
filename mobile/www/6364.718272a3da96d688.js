"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[6364],{6364:(F,v,m)=>{m.r(v),m.d(v,{FilesystemWeb:()=>q});var c=m(5861),R=m(7423);function x(f){const p=f.split("/").filter(e=>"."!==e),r=[];return p.forEach(e=>{".."===e&&r.length>0&&".."!==r[r.length-1]?r.pop():r.push(e)}),r.join("/")}let q=(()=>{class f extends R.Uw{constructor(){super(...arguments),this.DB_VERSION=1,this.DB_NAME="Disc",this._writeCmds=["add","put","delete"]}initDb(){var r=this;return(0,c.Z)(function*(){if(void 0!==r._db)return r._db;if(!("indexedDB"in window))throw r.unavailable("This browser doesn't support IndexedDB");return new Promise((e,n)=>{const t=indexedDB.open(r.DB_NAME,r.DB_VERSION);t.onupgradeneeded=f.doUpgrade,t.onsuccess=()=>{r._db=t.result,e(t.result)},t.onerror=()=>n(t.error),t.onblocked=()=>{console.warn("db blocked")}})})()}static doUpgrade(r){const n=r.target.result;n.objectStoreNames.contains("FileStorage")&&n.deleteObjectStore("FileStorage"),n.createObjectStore("FileStorage",{keyPath:"path"}).createIndex("by_folder","folder")}dbRequest(r,e){var n=this;return(0,c.Z)(function*(){const t=-1!==n._writeCmds.indexOf(r)?"readwrite":"readonly";return n.initDb().then(i=>new Promise((s,d)=>{const u=i.transaction(["FileStorage"],t).objectStore("FileStorage")[r](...e);u.onsuccess=()=>s(u.result),u.onerror=()=>d(u.error)}))})()}dbIndexRequest(r,e,n){var t=this;return(0,c.Z)(function*(){const i=-1!==t._writeCmds.indexOf(e)?"readwrite":"readonly";return t.initDb().then(s=>new Promise((d,a)=>{const h=s.transaction(["FileStorage"],i).objectStore("FileStorage").index(r)[e](...n);h.onsuccess=()=>d(h.result),h.onerror=()=>a(h.error)}))})()}getPath(r,e){const n=void 0!==e?e.replace(/^[/]+|[/]+$/g,""):"";let t="";return void 0!==r&&(t+="/"+r),""!==e&&(t+="/"+n),t}clear(){var r=this;return(0,c.Z)(function*(){(yield r.initDb()).transaction(["FileStorage"],"readwrite").objectStore("FileStorage").clear()})()}readFile(r){var e=this;return(0,c.Z)(function*(){const n=e.getPath(r.directory,r.path),t=yield e.dbRequest("get",[n]);if(void 0===t)throw Error("File does not exist.");return{data:t.content?t.content:""}})()}writeFile(r){var e=this;return(0,c.Z)(function*(){const n=e.getPath(r.directory,r.path);let t=r.data;const i=r.encoding,s=r.recursive,d=yield e.dbRequest("get",[n]);if(d&&"directory"===d.type)throw Error("The supplied path is a directory.");const a=n.substr(0,n.lastIndexOf("/"));if(void 0===(yield e.dbRequest("get",[a]))){const h=a.indexOf("/",1);if(-1!==h){const g=a.substr(h);yield e.mkdir({path:g,directory:r.directory,recursive:s})}}if(!i&&(t=t.indexOf(",")>=0?t.split(",")[1]:t,!e.isBase64String(t)))throw Error("The supplied data is not valid base64 content.");const u=Date.now(),l={path:n,folder:a,type:"file",size:t.length,ctime:u,mtime:u,content:t};return yield e.dbRequest("put",[l]),{uri:l.path}})()}appendFile(r){var e=this;return(0,c.Z)(function*(){const n=e.getPath(r.directory,r.path);let t=r.data;const i=r.encoding,s=n.substr(0,n.lastIndexOf("/")),d=Date.now();let a=d;const o=yield e.dbRequest("get",[n]);if(o&&"directory"===o.type)throw Error("The supplied path is a directory.");if(void 0===(yield e.dbRequest("get",[s]))){const h=s.indexOf("/",1);if(-1!==h){const g=s.substr(h);yield e.mkdir({path:g,directory:r.directory,recursive:!0})}}if(!i&&!e.isBase64String(t))throw Error("The supplied data is not valid base64 content.");void 0!==o&&(t=void 0===o.content||i?o.content+t:btoa(atob(o.content)+atob(t)),a=o.ctime);const l={path:n,folder:s,type:"file",size:t.length,ctime:a,mtime:d,content:t};yield e.dbRequest("put",[l])})()}deleteFile(r){var e=this;return(0,c.Z)(function*(){const n=e.getPath(r.directory,r.path);if(void 0===(yield e.dbRequest("get",[n])))throw Error("File does not exist.");if(0!==(yield e.dbIndexRequest("by_folder","getAllKeys",[IDBKeyRange.only(n)])).length)throw Error("Folder is not empty.");yield e.dbRequest("delete",[n])})()}mkdir(r){var e=this;return(0,c.Z)(function*(){const n=e.getPath(r.directory,r.path),t=r.recursive,i=n.substr(0,n.lastIndexOf("/")),s=(n.match(/\//g)||[]).length,d=yield e.dbRequest("get",[i]),a=yield e.dbRequest("get",[n]);if(1===s)throw Error("Cannot create Root directory");if(void 0!==a)throw Error("Current directory does already exist.");if(!t&&2!==s&&void 0===d)throw Error("Parent directory must exist");if(t&&2!==s&&void 0===d){const l=i.substr(i.indexOf("/",1));yield e.mkdir({path:l,directory:r.directory,recursive:t})}const o=Date.now(),u={path:n,folder:i,type:"directory",size:0,ctime:o,mtime:o};yield e.dbRequest("put",[u])})()}rmdir(r){var e=this;return(0,c.Z)(function*(){const{path:n,directory:t,recursive:i}=r,s=e.getPath(t,n),d=yield e.dbRequest("get",[s]);if(void 0===d)throw Error("Folder does not exist.");if("directory"!==d.type)throw Error("Requested path is not a directory");const a=yield e.readdir({path:n,directory:t});if(0!==a.files.length&&!i)throw Error("Folder is not empty");for(const o of a.files){const u=`${n}/${o.name}`;"file"===(yield e.stat({path:u,directory:t})).type?yield e.deleteFile({path:u,directory:t}):yield e.rmdir({path:u,directory:t,recursive:i})}yield e.dbRequest("delete",[s])})()}readdir(r){var e=this;return(0,c.Z)(function*(){const n=e.getPath(r.directory,r.path),t=yield e.dbRequest("get",[n]);if(""!==r.path&&void 0===t)throw Error("Folder does not exist.");const i=yield e.dbIndexRequest("by_folder","getAllKeys",[IDBKeyRange.only(n)]);return{files:yield Promise.all(i.map(function(){var d=(0,c.Z)(function*(a){let o=yield e.dbRequest("get",[a]);return void 0===o&&(o=yield e.dbRequest("get",[a+"/"])),{name:a.substring(n.length+1),type:o.type,size:o.size,ctime:o.ctime,mtime:o.mtime,uri:o.path}});return function(a){return d.apply(this,arguments)}}()))}})()}getUri(r){var e=this;return(0,c.Z)(function*(){const n=e.getPath(r.directory,r.path);let t=yield e.dbRequest("get",[n]);return void 0===t&&(t=yield e.dbRequest("get",[n+"/"])),{uri:t?.path||n}})()}stat(r){var e=this;return(0,c.Z)(function*(){const n=e.getPath(r.directory,r.path);let t=yield e.dbRequest("get",[n]);if(void 0===t&&(t=yield e.dbRequest("get",[n+"/"])),void 0===t)throw Error("Entry does not exist.");return{type:t.type,size:t.size,ctime:t.ctime,mtime:t.mtime,uri:t.path}})()}rename(r){var e=this;return(0,c.Z)(function*(){yield e._copy(r,!0)})()}copy(r){var e=this;return(0,c.Z)(function*(){return e._copy(r,!1)})()}requestPermissions(){return(0,c.Z)(function*(){return{publicStorage:"granted"}})()}checkPermissions(){return(0,c.Z)(function*(){return{publicStorage:"granted"}})()}_copy(r,e=!1){var n=this;return(0,c.Z)(function*(){let{toDirectory:t}=r;const{to:i,from:s,directory:d}=r;if(!i||!s)throw Error("Both to and from must be provided");t||(t=d);const a=n.getPath(d,s),o=n.getPath(t,i);if(a===o)return{uri:o};if(function D(f,p){f=x(f),p=x(p);const r=f.split("/"),e=p.split("/");return f!==p&&r.every((n,t)=>n===e[t])}(a,o))throw Error("To path cannot contain the from path");let u;try{u=yield n.stat({path:i,directory:t})}catch{const y=i.split("/");y.pop();const _=y.join("/");if(y.length>0&&"directory"!==(yield n.stat({path:_,directory:t})).type)throw new Error("Parent directory of the to path is a file")}if(u&&"directory"===u.type)throw new Error("Cannot overwrite a directory with a file");const l=yield n.stat({path:s,directory:d}),h=function(){var b=(0,c.Z)(function*(y,_,w){const E=n.getPath(t,y),P=yield n.dbRequest("get",[E]);P.ctime=_,P.mtime=w,yield n.dbRequest("put",[P])});return function(_,w,E){return b.apply(this,arguments)}}(),g=l.ctime?l.ctime:Date.now();switch(l.type){case"file":{const b=yield n.readFile({path:s,directory:d});e&&(yield n.deleteFile({path:s,directory:d}));const y=yield n.writeFile({path:i,directory:t,data:b.data});return e&&(yield h(i,g,l.mtime)),y}case"directory":{if(u)throw Error("Cannot move a directory over an existing object");try{yield n.mkdir({path:i,directory:t,recursive:!1}),e&&(yield h(i,g,l.mtime))}catch{}const b=(yield n.readdir({path:s,directory:d})).files;for(const y of b)yield n._copy({from:`${s}/${y}`,to:`${i}/${y}`,directory:d,toDirectory:t},e);e&&(yield n.rmdir({path:s,directory:d}))}}return{uri:o}})()}isBase64String(r){try{return btoa(atob(r))==r}catch{return!1}}}return f._debug=!0,f})()}}]);